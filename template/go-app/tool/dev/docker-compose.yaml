name: kemadev-REPONAMETMPL

networks:
  app:
    driver: bridge
    enable_ipv6: true

secrets:
  netrc:
    name: netrc
    environment: KEMA_NETRC

services:
  app-template:
    profiles:
      - never
    build:
      context: ../../
      dockerfile: build/Dockerfile
      target: dev
      secrets:
        - netrc
    networks:
      - app
    secrets:
      - netrc
    environment:
      KEMA_RUNTIME_ENVIRONMENT: dev
      KEMA_RUNTIME_APP_NAME: REPONAMETMPL
      KEMA_RUNTIME_APP_VERSION: v0.0.0-dev.0.0.0
      KEMA_RUNTIME_APP_NAMESPACE: whatever
      KEMA_OBSERVABILITY_ENDPOINT_URL: http://kemadev-REPONAMETMPL-jaeger-1:4317
      KEMA_CLIENT_DATABASE_CONNECTION_URL: "postgresql://dev:dev@kemadev-REPONAMETMPL-postgresql-1:5432/dev"
      KEMA_CLIENT_CACHE_CLIENT_ADDRESS: "kemadev-REPONAMETMPL-valkey-1:6379"
      KEMA_CLIENT_CACHE_PASSWORD: "dev"
      KEMA_CLIENT_SEARCH_CLIENT_ADDRESS: "https://kemadev-REPONAMETMPL-opensearch-1:9200"
      KEMA_CLIENT_SEARCH_USERNAME: "admin"
      KEMA_CLIENT_SEARCH_PASSWORD: "OpenSearchDev_1"
      # Set this to a strictly positive duration to export metrics to stdout
      KEMA_OBSERVABILITY_METRICS_EXPORT_INTERVAL: 0s
    ports:
      - 8080:8080
    restart: always
    develop:
      watch:
        - action: rebuild
          path: ../../
          target: /src
    # Close immediately and let compose restart the container without waiting for graceful shutdown
    stop_grace_period: 0s

  app:
    extends:
      service: app-template
    profiles:
      - dev

  app-debug:
    extends:
      service: app-template
    profiles:
      - debug
    build:
      target: debug
    ports:
      - 50000:50000
    security_opt:
      - apparmor=unconfined
    cap_add:
      - SYS_PTRACE

---
# Provide Jaeger for tracing
services:
  jaeger:
    image: jaegertracing/jaeger:2.10.0
    profiles:
      - dev
    ports:
      - 4317:4317
      - 4318:4318
      - 16686:16686
    networks:
      - app
    restart: always

---
# Provide PostgreSQL for SQL, enable by setting according profile
volumes:
  postgresql:
    driver: local

services:
  postgresql:
    image: postgres:17-alpine
    profiles:
      - dev
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
      POSTGRES_DB: dev
    volumes:
      - postgresql:/data
    ports:
      - 5432:5432
    networks:
      - app
    restart: always

---
# Provide Valkey for NoSQL, enable by setting according profile
volumes:
  valkey:
    driver: local

services:
  valkey:
    image: valkey/valkey:9-alpine
    profiles:
      - dev
    environment:
      VALKEY_EXTRA_FLAGS: --protected-mode yes --requirepass dev
    volumes:
      - valkey:/data
    ports:
      - 6379:6379
    networks:
      - app
    restart: always

---
# Provide Opensearch for search, enable by setting according profile
networks:
  opensearch:
    driver: bridge

volumes:
  opensearch:
    driver: local

services:
  opensearch:
    profiles:
      - dev
    image: opensearchproject/opensearch:3
    environment:
      cluster.name: dev
      node.name: kemadev-REPONAMETMPL-opensearch-1
      discovery.seed_hosts: kemadev-REPONAMETMPL-opensearch-1
      cluster.initial_cluster_manager_nodes: kemadev-REPONAMETMPL-opensearch-1
      bootstrap.memory_lock: true
      OPENSEARCH_JAVA_OPTS: -Xms512m -Xmx512m
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: OpenSearchDev_1
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch:/usr/share/opensearch/data
    ports:
      - 9200:9200
      - 9600:9600
    networks:
      - opensearch
      - app
  opensearch-dashboards:
    profiles:
      - dev
    image: opensearchproject/opensearch-dashboards:3
    ports:
      - 5601:5601
    environment:
      OPENSEARCH_HOSTS: '["https://kemadev-REPONAMETMPL-opensearch-1:9200"]'
    networks:
      - opensearch
